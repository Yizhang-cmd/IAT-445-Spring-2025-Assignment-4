Please do not share this with others outside of the class.

This mostly works for Quest 3 (because of the body tracking required). If you do not want to use body tracking, it will then work for the Quest 2, Quest 3, and other VR headsets, but you will need to modify the scripts (remove the use of the body parts gameobject/transforms), you can probably use an AI chatbot to help you with this.

How to Set Up:

1) Download files from: https://vault.sfu.ca/index.php/s/4iSVTM5Z1a7b0q0
Password: VRFun321

2) Open project with Unity (version 2022.3.55f1), if you are asked to restart the Unity editor, restart it. Yes, it takes a while to open.
3) Meta Quest Link -> Settings -> Beta -> Enable (click on): Developer runtime features -> Enable (click on): Spatial data over Meta Quest Link -> Turn on (button)
4) Make sure there aren't any errors with Meta XR Tools: 
	4.1) Click on Meta XR Tools (underneath the Unity Editor's Menu) -> Project Setup Tool. 
	4.2) A Project Setup Tool Window should appear (Project Settings tab -> Meta XR)
	4.3) Click through the different tabs ("Windows, Mac, Linux settings" and "Android settings") and resolve any issues by clicking on the "Apply All" button. Repeat this until you do not see this button anymore.

5) If you have other errors, try searching online for the error in the console for possible solutions.
6) If that does not work, try restarting the Meta Quest Link app, the Unity Project, Unity Hub, and the computer as a last resort.
7) If there are errors, make sure these assets have been added to the project (they should already be in the project, if not add them through the Package Manager)
	7.1) Meta XR All-in-One SDK (version 72)
	7.2) Meta Movement (version 72)
	7.3) OpenXR Plugin (version 1.13.2)
	7.4) XR Interaction Toolkit (version 2.6.3)
8) If you are still having errors, it is probably due to issues with the body tracking from the Quest 3. Go through the tutorials below as they should help.



Other information:
	Example scenes: Assets -> Scenes
	Scripts: : Assets -> Scripts
	Locomotion scripts in the scene: 
		Leaning Tilt Controller Test: Hierarchy -> OVRCameraRig (Inspector) -> Enable one of the locomotion scripts (Tilt_Locomotion, Controller_Locomotion_OpenXR, Leaning_Locomotion), only one at a time, as well as the other scripts/components currently there, and set the locomotion settings/variable values. 		
		
		Teleport Test: Hierarchy -> OVRCameraRig (XR Origin (XR Rig)) -> Enable the "Line Renderer" and "VR Teleport Controller" scripts, as well as the other scripts/components currently there, and set the teleport settings/variable values.		
	
	Note, some locomotion methods require a "calibration" step, where you will need to either press a calibration button on the controller (X/A or B/Y) or the "C" key on the keyboard. If the locomotion method is not working, try calibrating it first. When calibrating, be sure you are sitting/standing upright as you may have to lean forward and starting at that position makes it easier.

	
Locomotion Ideas (Locomotion Vault): https://locomotionvault.github.io/	


Useful Tutorials

Unity's New Input System (how to get input from VR controllers)
	https://youtu.be/cSkOx35Khlw?feature=shared
	https://youtu.be/-c_LYQgG8BY?feature=shared
	https://youtu.be/NObwdF9RqCg?feature=shared
	https://youtu.be/DMUZfVSYJfs?feature=shared
	https://youtu.be/rMlcwtoui4I?feature=shared


VR Retargeting (inverse kinematics) - Requires Quest 3 or newer

This is used to get body motions to control an avatarâ€™s body. Also useful for locomotion when using specific body parts for forward direction or angles for locomotion, as is shown in this project.
	https://youtu.be/ZCN_oi1vB0k?si=rYsxS4kc7TWGoyI7
	https://youtu.be/WKfyeCV5f44?si=zHSrRdYtMu0r-Uid
	https://youtu.be/_vtAyHOQRUg?si=4BJkhgh2Rj0jqcRc
